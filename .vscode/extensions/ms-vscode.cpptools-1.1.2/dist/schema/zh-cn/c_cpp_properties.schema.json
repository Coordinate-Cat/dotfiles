{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"type": "object",
	"definitions": {
		"configurations": {
			"type": "array",
			"items": {
				"type": "object",
				"required": [
					"name"
				],
				"properties": {
					"name": {
						"description": "配置标识符。Mac、Linux 和 Win32 是将在这些平台上自动选定的特殊配置标识符，但标识符可为任何内容。",
						"type": "string"
					},
					"compilerPath": {
						"description": "正在使用以便启用更准确的 IntelliSense 的编译器的完整路径，例如 /usr/bin/gcc。",
						"type": "string"
					},
					"compilerArgs": {
						"description": "用于修改所使用的包含或定义的编译器参数，例如 -nostdinc++、-m32 等。",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"cStandard": {
						"description": "用于 IntelliSense 的 C 语言标准的版本。注意: GNU 标准仅用于查询设置编译器以获取 GNU 定义，并且 IntelliSense 将模拟等效的 C 标准版本。",
						"type": "string",
						"enum": [
							"c89",
							"c99",
							"c11",
							"c17",
							"gnu89",
							"gnu99",
							"gnu11",
							"gnu17",
							"${default}"
						]
					},
					"cppStandard": {
						"description": "用于 IntelliSense 的 C++ 语言标准的版本。注意: GNU 标准仅用于查询设置用来获取 GNU 定义的编译器，并且 IntelliSense 将模拟等效的 C++ 标准版本。",
						"type": "string",
						"enum": [
							"c++98",
							"c++03",
							"c++11",
							"c++14",
							"c++17",
							"c++20",
							"gnu++98",
							"gnu++03",
							"gnu++11",
							"gnu++14",
							"gnu++17",
							"gnu++20",
							"${default}"
						]
					},
					"compileCommands": {
						"description": "工作区的 compile_commands.json 文件的完整路径。",
						"type": "string"
					},
					"includePath": {
						"description": "在搜索包含的标头时 IntelliSense 引擎要使用的路径列表。对这些路径的搜索不是递归搜索。指定 \"**\" 可指示递归搜索。例如: \"${workspaceFolder}/**\" 将搜索所有子目录，而 \"${workspaceFolder}\" 将不搜索所有子目录。",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"macFrameworkPath": {
						"description": "Intellisense 引擎在 Mac 框架中搜索包含的标头时要使用的路径的列表。仅在 Mac 配置中受支持。",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"windowsSdkVersion": {
						"description": "要在 Windows 上使用的 Windows SDK 包含路径的版本，例如 \"10.0.17134.0\"。",
						"type": "string",
						"pattern": "^\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1$"
					},
					"defines": {
						"description": "分析文件时 IntelliSense 引擎要使用的预处理器定义的列表。(可选)使用 = 设置值，例如 VERSION=1。",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"intelliSenseMode": {
						"description": "要使用的 IntelliSense 模式，该模式映射到 MSVC、gcc 或 Clang 的体系结构专属变体。如果未设置或设置为 ${default}，则扩展将选择该平台的默认值。Windows 默认为 msvc-x64，Linux 默认为 gcc-x64，macOS 默认为 clang-x64。",
						"type": "string",
						"enum": [
							"clang-x86",
							"clang-x64",
							"clang-arm",
							"clang-arm64",
							"gcc-x86",
							"gcc-x64",
							"gcc-arm",
							"gcc-arm64",
							"msvc-x86",
							"msvc-x64",
							"msvc-arm",
							"msvc-arm64",
							"${default}"
						]
					},
					"forcedInclude": {
						"description": "应在翻译单元中包括在任何包含文件之前的文件的列表。",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"configurationProvider": {
						"description": "可为源文件提供 IntelliSense 配置信息的 VS Code 扩展的 ID。",
						"type": "string"
					},
					"browse": {
						"type": "object",
						"properties": {
							"limitSymbolsToIncludedHeaders": {
								"description": "如果为 true，则仅处理以标头形式直接或间接包含的文件；如果为 false，则处理指定的包含路径下的所有文件。",
								"type": [
									"boolean",
									"string"
								]
							},
							"databaseFilename": {
								"description": "所生成的符号数据库的路径。如果指定了相对路径，则它将相对于工作区的默认存储位置。",
								"type": "string"
							},
							"path": {
								"description": "一个路径列表，这些路径用于为工作区符号编制索引和进行分析(这些符号用于“转到定义”和“查找所有引用”等)。默认在这些路径中以递归方式进行搜索。指定 \"*\" 可指示非递归搜索。例如，\"${workspaceFolder}\" 将搜索所有子目录，而 \"${workspaceFolder}/*\" 将不会。",
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						},
						"additionalProperties": false
					},
					"customConfigurationVariables": {
						"type": "object",
						"description": "可通过命令 ${cpptools:activeConfigCustomVariable} 查询要用于 launch.json 或 tasks.json 的输入变量的自定义变量。",
						"patternProperties": {
							"(^.+$)": {
								"type": "string"
							}
						},
						"additionalProperties": false
					}
				},
				"additionalProperties": false
			}
		},
		"env": {
			"type": "object",
			"description": "可通过 ${变量} 或 ${env:变量} 语法在此文件中的任意位置重用的自定义变量。",
			"patternProperties": {
				"(?!^workspaceFolder$)(?!^workspaceRoot$)(?!^workspaceFolderBasename$)(?!^default$)(^.+$)": {
					"oneOf": [
						{
							"type": "string"
						},
						{
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					]
				}
			},
			"additionalProperties": false
		},
		"version": {
			"type": "integer",
			"description": "配置文件的版本。此属性由扩展托管。请勿更改它。"
		},
		"enableConfigurationSquiggles": {
			"type": "boolean",
			"default": true,
			"description": "控制扩展是否报告在 c_cpp_properties.json 中检测到的错误。"
		}
	},
	"properties": {
		"configurations": {
			"$ref": "#/definitions/configurations"
		},
		"env": {
			"$ref": "#/definitions/env"
		},
		"version": {
			"$ref": "#/definitions/version"
		},
		"enableConfigurationSquiggles": {
			"$ref": "#/definitions/enableConfigurationSquiggles"
		}
	},
	"required": [
		"configurations",
		"version"
	],
	"additionalProperties": false
}