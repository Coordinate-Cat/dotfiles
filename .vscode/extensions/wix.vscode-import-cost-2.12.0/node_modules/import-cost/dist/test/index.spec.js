'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var test = function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee(fileName) {
    var pkg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'chai';
    var minSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10000;
    var maxSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 15000;
    var packages;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return whenDone(importCost(fixture(fileName)));

          case 2:
            packages = _context.sent;

            (0, _chai.expect)(sizeOf(packages, pkg)).to.be.within(minSize, maxSize);
            (0, _chai.expect)(gzipOf(packages, pkg)).to.be.within(sizeOf(packages, pkg) / 50, sizeOf(packages, pkg) / 1.5);

          case 5:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function test(_x6) {
    return _ref.apply(this, arguments);
  };
}();

var timed = function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2(fn) {
    var time, diff;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            time = process.hrtime();
            _context2.next = 3;
            return fn();

          case 3:
            diff = process.hrtime(time);
            return _context2.abrupt('return', Math.round((diff[0] * 1e9 + diff[1]) / 1e6));

          case 5:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function timed(_x7) {
    return _ref2.apply(this, arguments);
  };
}();

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _chai = require('chai');

var _src = require('../src');

var _packageInfo = require('../src/packageInfo');

var _debouncePromise = require('../src/debouncePromise');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } /* global wallaby */
/* eslint-disable */


var DEFAULT_CONFIG = {
  concurrent: false
};
var workingFolder = typeof wallaby !== 'undefined' ? _path2.default.join(wallaby.localProjectDir, 'test') : __dirname;
function fixture(fileName) {
  return _path2.default.join(workingFolder, 'fixtures', fileName);
}

function whenDone(emitter) {
  return new Promise(function (resolve, reject) {
    var start = void 0;
    var calculated = [];
    emitter.on('start', function (packages) {
      (0, _chai.expect)(start).to.equal(undefined);
      start = packages;
    });
    emitter.on('calculated', function (packages) {
      return calculated.push(packages);
    });
    emitter.on('done', function (packages) {
      (0, _chai.expect)(start.length).to.equal(packages.length);
      (0, _chai.expect)(calculated.length).to.equal(packages.length);
      resolve(packages);
    });
    emitter.on('error', reject);
  });
}

function importCost(fileName) {
  var language = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_CONFIG;

  language = language ? language : fileName.split('.').pop() === 'js' ? _src.JAVASCRIPT : _src.TYPESCRIPT;
  return (0, _src.importCost)(fileName, _fs2.default.readFileSync(fileName, 'utf-8'), language, config);
}

function sizeOf(packages, name) {
  return packages.filter(function (x) {
    return x.name === name;
  }).shift().size;
}

function gzipOf(packages, name) {
  return packages.filter(function (x) {
    return x.name === name;
  }).shift().gzip;
}

describe('importCost', function () {
  beforeEach(function () {
    return (0, _packageInfo.clearSizeCache)();
  });
  afterEach(function () {
    return (0, _packageInfo.clearSizeCache)();
  });
  afterEach(function () {
    return (0, _src.cleanup)();
  });

  // it.only('local file', async () => {
  //   const result = await whenDone(importCost(path.join(workingFolder, 'index.spec.js'), JAVASCRIPT));
  //   console.log(result[0].error);
  //   debugger;
  // });

  it('calculates size of require in javascript', function () {
    return test('require.js');
  });
  it('calculates size of require in typescript', function () {
    return test('require.ts');
  });
  it('calculates size of template require in javascript', function () {
    return test('require-template.js');
  });
  it('calculates size of template require in typescript', function () {
    return test('require-template.ts');
  });
  it('calculates size of import in javascript', function () {
    return test('import.js');
  });
  it('calculates size of import in typescript', function () {
    return test('import.ts');
  });
  it('calculate size of imports in a file contaning typescript features not supportted by babel', function () {
    return test('typescript-not-supported-features.ts');
  });
  it('calculates size of aliased import in javascript', function () {
    return test('import-aliased.js');
  });
  it('calculates size of aliased import in typescript', function () {
    return test('import-aliased.ts');
  });
  it('calculates size of import with no semicolon in typescript', function () {
    return test('import-no-semicolon.ts');
  });
  it('calculates size of legacy import in javascript', function () {
    return test('import-legacy.js');
  });
  it('calculates size of legacy import in typescript', function () {
    return test('import-legacy.ts');
  });
  it('calculates size of node import in javascript', function () {
    return test('import-node.js', 'node-stuff');
  });
  it('calculates size of namespace import in javascript', function () {
    return test('import-namespace.js');
  });
  // yoshi uses babel 6 which does not support shorthand react fragments <> </>
  // it('calculates size of imports in a file with shorthand react fragments', () =>
  //   test('react-fragments.jsx'));
  it('calculates size of namespace import in typescript', function () {
    return test('import-namespace.ts');
  });
  it('calculates size of specifiers import in javascript', function () {
    return test('import-specifiers.js');
  });
  it('calculates size of specifiers import in typescript', function () {
    return test('import-specifiers.ts');
  });
  it('calculates size of mixed default+named import in javascript', function () {
    return test('import-mixed.js');
  });
  it('calculates size of mixed default+named import in typescript', function () {
    return test('import-mixed.ts');
  });
  it('calculates size of mixed default+global import in javascript', function () {
    return test('import-global-mixed.js', 'react');
  });
  it('calculates size of mixed default+global import in typescript', function () {
    return test('import-global-mixed.ts', 'react');
  });
  it('calculates size of cherry pick import in javascript', function () {
    return test('import-cherry.js', 'chai/abc');
  });
  it('calculates size of cherry pick import in typescript', function () {
    return test('import-cherry.ts', 'chai/abc');
  });
  it('calculates size of scoped import in javascript', function () {
    return test('import-scoped.js', '@angular/core');
  });
  it('calculates size of scoped import in typescript', function () {
    return test('import-scoped.ts', '@angular/core');
  });
  it('calculates size of shaken import in javascript', function () {
    return test('import-shaken.js', 'react', 500, 1200);
  });
  it('calculates size of shaken import in typescript', function () {
    return test('import-shaken.ts', 'react', 500, 1200);
  });
  it('calculates size of production env import in javascript', function () {
    return test('import-env.js', 'react-dom', 500, 1200);
  });
  it('calculates size of production env import in typescript', function () {
    return test('import-env.ts', 'react-dom', 500, 1200);
  });
  it('calculates size without externals', function () {
    return test('import-externals.js', 'wix-style', 500, 1200);
  });
  it('calculates size without peerDependencies', function () {
    return test('import-peer.js', 'haspeerdeps', 0, 1200);
  });
  it('supports a monorepo-like structure', function () {
    return test('./yarn-workspace/import-nested-project.js', 'chai');
  });
  it('supports a monorepo-like structure with scoped module', function () {
    return test('./yarn-workspace/import-with-scope.js', '@angular/core');
  });
  it('supports a monorepo-like structure with scoped module and file name', function () {
    return test('./yarn-workspace/import-with-scope-filename.js', '@angular/core/index.js');
  });
  it('calculates size of a dynamic import in javascript', function () {
    return test('dynamic-import.js');
  });
  it('calculates size of a dynamic import in typescript', function () {
    return test('dynamic-import.ts');
  });

  it('caches the results import string & version', _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
    return _regenerator2.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.t0 = _chai.expect;
            _context3.next = 3;
            return timed(function () {
              return test('import.js');
            });

          case 3:
            _context3.t1 = _context3.sent;
            (0, _context3.t0)(_context3.t1).to.be.within(100, 1500);
            _context3.t2 = _chai.expect;
            _context3.next = 8;
            return timed(function () {
              return test('import-specifiers.js');
            });

          case 8:
            _context3.t3 = _context3.sent;
            (0, _context3.t2)(_context3.t3).to.be.within(100, 1500);
            _context3.t4 = _chai.expect;
            _context3.next = 13;
            return timed(function () {
              return test('import.ts');
            });

          case 13:
            _context3.t5 = _context3.sent;
            (0, _context3.t4)(_context3.t5).to.be.within(0, 100);

          case 15:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, undefined);
  })));
  it('ignores order of javascript imports for caching purposes', _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee4() {
    return _regenerator2.default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.t0 = _chai.expect;
            _context4.next = 3;
            return timed(function () {
              return test('import-specifiers.js');
            });

          case 3:
            _context4.t1 = _context4.sent;
            (0, _context4.t0)(_context4.t1).to.be.within(100, 1500);
            _context4.t2 = _chai.expect;
            _context4.next = 8;
            return timed(function () {
              return test('import-specifiers-reversed.js');
            });

          case 8:
            _context4.t3 = _context4.sent;
            (0, _context4.t2)(_context4.t3).to.be.within(0, 100);
            _context4.t4 = _chai.expect;
            _context4.next = 13;
            return timed(function () {
              return test('import-mixed.js');
            });

          case 13:
            _context4.t5 = _context4.sent;
            (0, _context4.t4)(_context4.t5).to.be.within(100, 1500);
            _context4.t6 = _chai.expect;
            _context4.next = 18;
            return timed(function () {
              return test('import-mixed-reversed.js');
            });

          case 18:
            _context4.t7 = _context4.sent;
            (0, _context4.t6)(_context4.t7).to.be.within(0, 120);

          case 20:
          case 'end':
            return _context4.stop();
        }
      }
    }, _callee4, undefined);
  })));
  it('ignores order of typescript imports for caching purposes', _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee5() {
    return _regenerator2.default.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.t0 = _chai.expect;
            _context5.next = 3;
            return timed(function () {
              return test('import-specifiers.ts');
            });

          case 3:
            _context5.t1 = _context5.sent;
            (0, _context5.t0)(_context5.t1).to.be.within(100, 1500);
            _context5.t2 = _chai.expect;
            _context5.next = 8;
            return timed(function () {
              return test('import-specifiers-reversed.ts');
            });

          case 8:
            _context5.t3 = _context5.sent;
            (0, _context5.t2)(_context5.t3).to.be.within(0, 100);
            _context5.t4 = _chai.expect;
            _context5.next = 13;
            return timed(function () {
              return test('import-mixed.ts');
            });

          case 13:
            _context5.t5 = _context5.sent;
            (0, _context5.t4)(_context5.t5).to.be.within(100, 1500);
            _context5.t6 = _chai.expect;
            _context5.next = 18;
            return timed(function () {
              return test('import-mixed-reversed.ts');
            });

          case 18:
            _context5.t7 = _context5.sent;
            (0, _context5.t6)(_context5.t7).to.be.within(0, 100);

          case 20:
          case 'end':
            return _context5.stop();
        }
      }
    }, _callee5, undefined);
  })));
  it('debounce any consecutive calculations of same import line', function () {
    var p1 = (0, _chai.expect)(whenDone((0, _src.importCost)(fixture('import.js'), 'import "chai";', _src.JAVASCRIPT, DEFAULT_CONFIG))).to.be.rejectedWith(_debouncePromise.DebounceError);
    var p2 = (0, _chai.expect)(whenDone((0, _src.importCost)(fixture('import.js'), 'import "chai/index";', _src.JAVASCRIPT, DEFAULT_CONFIG))).to.be.fulfilled;
    return Promise.all([p1, p2]);
  });
  it('caches everything to filesystem', _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee6() {
    return _regenerator2.default.wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.t0 = _chai.expect;
            _context6.next = 3;
            return timed(function () {
              return test('import.js');
            });

          case 3:
            _context6.t1 = _context6.sent;
            (0, _context6.t0)(_context6.t1).to.be.within(100, 1500);
            _context6.t2 = _chai.expect;
            _context6.next = 8;
            return timed(function () {
              return test('import-specifiers.js');
            });

          case 8:
            _context6.t3 = _context6.sent;
            (0, _context6.t2)(_context6.t3).to.be.within(100, 1500);

            _fs2.default.renameSync(_packageInfo.cacheFileName, _packageInfo.cacheFileName + '.bak');
            (0, _packageInfo.clearSizeCache)();
            _fs2.default.renameSync(_packageInfo.cacheFileName + '.bak', _packageInfo.cacheFileName);
            _context6.t4 = _chai.expect;
            _context6.next = 16;
            return timed(function () {
              return test('import.ts');
            });

          case 16:
            _context6.t5 = _context6.sent;
            (0, _context6.t4)(_context6.t5).to.be.within(0, 100);

          case 18:
          case 'end':
            return _context6.stop();
        }
      }
    }, _callee6, undefined);
  })));

  it('results in 0 if dependency is missing', _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee7() {
    var packages;
    return _regenerator2.default.wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _context7.next = 2;
            return whenDone(importCost(fixture('failed-missing.js')));

          case 2:
            packages = _context7.sent;

            (0, _chai.expect)(sizeOf(packages, 'sinon')).to.equal(0);

          case 4:
          case 'end':
            return _context7.stop();
        }
      }
    }, _callee7, undefined);
  })));
  it('results in 0 if bundle fails', _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee8() {
    var packages;
    return _regenerator2.default.wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.next = 2;
            return whenDone(importCost(fixture('failed-bundle.js')));

          case 2:
            packages = _context8.sent;

            (0, _chai.expect)(sizeOf(packages, 'jest')).to.equal(0);

          case 4:
          case 'end':
            return _context8.stop();
        }
      }
    }, _callee8, undefined);
  })));

  it('errors on broken javascript', function () {
    return (0, _chai.expect)(whenDone(importCost(fixture('incomplete.bad_js')))).to.be.rejected;
  });
  it('errors on broken typescript', function () {
    return (0, _chai.expect)(whenDone(importCost(fixture('incomplete.bad_ts')))).to.be.rejected;
  });
  it('completes with empty array for unknown file type', _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee9() {
    var packages;
    return _regenerator2.default.wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            _context9.next = 2;
            return whenDone(importCost(fixture('require.js'), 'flow'));

          case 2:
            packages = _context9.sent;

            (0, _chai.expect)(packages).to.eql([]);

          case 4:
          case 'end':
            return _context9.stop();
        }
      }
    }, _callee9, undefined);
  })));

  it('should handle timeouts gracefully', _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee10() {
    var packages;
    return _regenerator2.default.wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            _context10.next = 2;
            return whenDone(importCost(fixture('require.js'), _src.JAVASCRIPT, {
              concurrent: true,
              maxCallTime: 10
            }));

          case 2:
            packages = _context10.sent;

            (0, _chai.expect)(packages[0].size).to.equal(0);
            (0, _chai.expect)(packages[0].error.type).to.equal('TimeoutError');

          case 5:
          case 'end':
            return _context10.stop();
        }
      }
    }, _callee10, undefined);
  })));
});