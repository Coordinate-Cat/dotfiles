'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const debuglog = require("debug");
const configManager = require("../managers/config");
const types_1 = require("../types");
const debug = debuglog('config-profiler:services:parser');
function getSyntaxErrorMessage(errors) {
    return 'No one parser could not parse file. See log for more details: ' + JSON.stringify(errors);
}
function parse(content, filepath, ctime, options) {
    // Try to parse file with defined parsers
    let config;
    const errors = [];
    for (let i = 0; i < options.parsers.length; i++) {
        const item = options.parsers[i];
        // Apply the current parser pattern to filepath
        if (!options.useEachParser && !item.pattern.test(filepath)) {
            continue;
        }
        try {
            config = item.parser(content);
            debug(`Founded config was parsed by parser #${i} with the follow pattern: %o`, item.pattern);
            break;
        }
        catch (err) {
            errors.push(err.toString());
        }
    }
    if (!config) {
        const message = getSyntaxErrorMessage(errors);
        throw new SyntaxError(message);
    }
    return configManager.prepare(types_1.ConfigType.File, filepath, ctime, config);
}
exports.parse = parse;
