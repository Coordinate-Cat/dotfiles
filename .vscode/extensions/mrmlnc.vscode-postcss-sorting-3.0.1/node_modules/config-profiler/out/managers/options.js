'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const extend = require("extend");
const parseJson = require("parse-json");
const requireFromString = require("require-from-string");
function mergeChangeable(options, changeable) {
    return extend(options, changeable);
}
exports.mergeChangeable = mergeChangeable;
function prepare(options) {
    options = Object.assign({
        settings: null,
        predefinedConfigs: {},
        configFiles: [],
        parsers: [],
        useEachParser: false,
        transform: (value) => value,
        envVariableName: null,
        allowHomeDirectory: true,
        extendBuildedConfig: null,
        cache: true
    }, options);
    options.props = Object.assign({
        package: null,
        extends: 'extends'
    }, options.props);
    // If "packageProp" property is defined then check the availability "package.json"
    // _file in the "configFiles" property
    if (options.props.package && options.configFiles.indexOf('package.jgon') === -1) {
        options.configFiles.push('package.json');
    }
    // Merge user defined parsers with default parsers
    options.parsers = [].concat(options.parsers, [
        { pattern: /.*(json|rc)$/, parser: parseJson },
        { pattern: /.*(js|rc)$/, parser: requireFromString }
    ]);
    return options;
}
exports.prepare = prepare;
