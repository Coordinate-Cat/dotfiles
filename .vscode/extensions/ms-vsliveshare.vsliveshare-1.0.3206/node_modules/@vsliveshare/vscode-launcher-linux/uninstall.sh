#
# Copyright Â© Microsoft Corporation
# All rights reserved.
#
# Use sh instead of bash since it's available on all Linux distros
#!/bin/sh

UNINSTALLSUDO=$1
SUDOCHECKED=0
SUDOREMOVEDSOMETHING=0

echo "(*) Uninstalling launcher"
if [ "$UNINSTALLSUDO" != "false" ]; then
    echo "(*) Including locations that require sudo to uninstall."
else
    echo "(*) Skipping locations that require sudo to uninstall."
fi

# Wrapper function to only use sudo if not already root
sudoIf()
{
    if [ $(id -u) -ne 0 ]; then
        if [ $SUDOCHECKED -eq 0 ]; then
            sudo -v > /dev/null 2>&1
            if [ $? -ne 0 ]; then
                echo "(!) Launcher uninstall failed! You do not have the needed admin / root rights"
                echo "    to access the needed paths required to remove the launcher."
                exit 1
            fi
            SUDOCHECKED=1
        fi
        set -- command sudo "$@"
    fi
    "$@"
}

removeImpl()
{
    # If a directory, remove it recursivley
    if [ -d "$1" ]; then
        if [ "$2" = "sudo" ]; then
            sudoIf rm -rf "$1"
            echo $?
        else
            rm -rf "$1"
            echo $?
        fi
    # If a file, remove it
    elif [ -f "$1" ]; then
        if [ "$2" = "sudo" ]; then
            sudoIf rm -f "$1"
            echo $?
        else
            rm -f "$1"
            echo $?
        fi
    # Otherwise return not found
    else
        echo 3
    fi
}

remove()
{
    local RESULT=$(removeImpl "$1" "$2")
    if [ $RESULT -eq 3 ]; then
        echo "(*) Skipping $1, not found."
    elif [ $RESULT -ne 0 ]; then
        echo "(!) Uninstall failed. Failed to remove $1. Exit code: $RESULT"
        exit 1
    else
        if [ "$2" = "sudo" ]; then
            SUDOREMOVEDSOMETHING=1
        fi
        echo "(*) Removed $1."
    fi
}

if [ -z ${XDG_DATA_HOME+x} ]; then
    LOCALROOT="$HOME/.local/share"
else
    LOCALROOT="$XDG_DATA_HOME"
fi

echo "(*) Cleaning out launcher"
# Clean out possible non-sudo requiring launcher locations
remove "$HOME/.vsliveshare"
if [ "$LOCALROOT" != "/usr/local/share" ]; then
    remove "$LOCALROOT/vsliveshare"
    remove "$LOCALROOT/applications/vsls-launcher.desktop"
    # sudo not required for this path
    update-desktop-database "$LOCALROOT/applications"
    UPDATERESULT=$?
    if [ $UPDATERESULT -ne 0 ]; then
        echo "(!) Failed to update desktop database. Exit code: $UPDATERESULT"
        exit 1
    fi
fi

# Clean possible sudo requiring launcher locations if enabled
if [ "$UNINSTALLSUDO" != "false" ]; then
    # Remove old launcher location if found
    remove "/usr/local/share/vsliveshare" "sudo"
    # Remove desktop location
    remove "/usr/local/share/applications/vsls-launcher.desktop" "sudo"
    # Update database if we removed something
    if [ $SUDOREMOVEDSOMETHING -eq 1 ]; then
        sudoIf update-desktop-database /usr/local/share/applications
        UPDATERESULT=$?
        if [ $UPDATERESULT -ne 0 ]; then
            echo "(!) Failed to update desktop database. Exit code: $UPDATERESULT"
            exit 1
        fi
    fi
fi

echo "(*) Launcher uninstalled."