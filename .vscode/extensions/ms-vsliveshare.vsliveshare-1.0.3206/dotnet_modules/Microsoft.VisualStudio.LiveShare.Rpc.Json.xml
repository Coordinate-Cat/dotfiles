<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.VisualStudio.LiveShare.Rpc.Json</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Cascade.Rpc.Json.ByteArrayConverter.GetJsonStringFromBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Gets string representation of the byte range that is optimized for passed in JSON.
            </summary>
            <param name="buffer">Buffer to get the bytes from. Not null.</param>
            <param name="offset">Offset in the buffer to get the bytes from.</param>
            <param name="count">Count of the bytes.</param>
            <returns>A string that contains the bytes encoded either as utf8, or base64, or compressed and then encoded as base64. The string is empty if the byte array is empty.</returns>
        </member>
        <member name="M:Microsoft.Cascade.Rpc.Json.ByteArrayConverter.GetBytesFromJsonString(System.String)">
            <summary>
            Extract byte array from the string that was encoded by <see cref="M:Microsoft.Cascade.Rpc.Json.ByteArrayConverter.GetJsonStringFromBytes(System.Byte[],System.Int32,System.Int32)" />.
            </summary>
            <param name="value">Bytes encoded as string.</param>
            <returns>Array of bytes.</returns>
        </member>
        <member name="T:Microsoft.Cascade.Rpc.Json.JsonArguments">
            <summary>
            Supports deferred type resolution of JSON-serialized arguments.
            </summary>
        </member>
        <member name="T:Microsoft.Cascade.Rpc.Json.JsonResponseMessage">
            <summary>
            Supports deferred resolution of JSON response result types.
            </summary>
        </member>
        <member name="T:Microsoft.Cascade.Rpc.Json.JsonRpcStream">
            <summary>
            An RPC stream that reads and writes messages using JSON serialization.
            </summary>
        </member>
        <member name="T:Microsoft.Cascade.Rpc.Json.JsonRpcStream.ContractResolver">
            <summary>
            Override to prevent camel-casing dictionary keys.
            (Property names are still camel-cased.)
            </summary>
        </member>
        <member name="P:Microsoft.Cascade.Rpc.Json.JsonRpcStream.SerializerSettings">
            <summary>
            Gets the serializer settings used by all JsonRpcStream instances.
            </summary>
        </member>
        <member name="P:Microsoft.Cascade.Rpc.Json.JsonRpcStream.Serializer">
            <summary>
            Gets a serializer created from the settings used by all JsonRpcStream instances.
            </summary>
        </member>
        <member name="T:Microsoft.Cascade.Rpc.Json.SafeWriteBufferedStream">
            <summary>
            A stream that wraps readable and writable streams and provides buffering for writing.
            Disposing of SafeWriteBufferedStream won't throw if the underlying writable pipe throws on flash, which buffered stream may attempt.
            The write buffer size is 16K, the same as the maximum SSH channel data message size.
            </summary>
        </member>
        <member name="T:Microsoft.Cascade.Rpc.Json.WrappedStream">
            <summary>
            A stream that uses one stream for reading, and another one for writing.
            </summary>
            <remarks>
            This class is a deriviation of CombinedStream from https://github.com/AArnott/Nerdbank.Streams.
            Nerdbank.Streams doesn't support net46, and we need it to support it for VS 15.9.
            </remarks>
        </member>
    </members>
</doc>
