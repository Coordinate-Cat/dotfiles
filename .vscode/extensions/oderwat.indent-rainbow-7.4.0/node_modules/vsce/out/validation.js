"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var semver = require("semver");
var nameRegex = /^[a-z0-9][a-z0-9\-]*$/i;
function validatePublisher(publisher) {
    if (!publisher) {
        throw new Error("Missing publisher name. Learn more: https://code.visualstudio.com/api/working-with-extensions/publishing-extension#publishing-extensions");
    }
    if (!nameRegex.test(publisher)) {
        throw new Error("Invalid publisher name '" + publisher + "'. Expected the identifier of a publisher, not its human-friendly name.  Learn more: https://code.visualstudio.com/api/working-with-extensions/publishing-extension#publishing-extensions");
    }
}
exports.validatePublisher = validatePublisher;
function validateExtensionName(name) {
    if (!name) {
        throw new Error("Missing extension name");
    }
    if (!nameRegex.test(name)) {
        throw new Error("Invalid extension name '" + name + "'");
    }
}
exports.validateExtensionName = validateExtensionName;
function validateVersion(version) {
    if (!version) {
        throw new Error("Missing extension version");
    }
    if (!semver.valid(version)) {
        throw new Error("Invalid extension version '" + version + "'");
    }
}
exports.validateVersion = validateVersion;
function validateEngineCompatibility(version) {
    if (!version) {
        throw new Error("Missing vscode engine compatibility version");
    }
    if (!/^\*$|^(\^|>=)?((\d+)|x)\.((\d+)|x)\.((\d+)|x)(\-.*)?$/.test(version)) {
        throw new Error("Invalid vscode engine compatibility version '" + version + "'");
    }
}
exports.validateEngineCompatibility = validateEngineCompatibility;

//# sourceMappingURL=validation.js.map
