"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a;
var _read = require("read");
var WebApi_1 = require("vso-node-api/WebApi");
var denodeify = require("denodeify");
var chalk_1 = require("chalk");
var publicgalleryapi_1 = require("./publicgalleryapi");
var __read = denodeify(_read);
function read(prompt, options) {
    if (options === void 0) { options = {}; }
    if (process.env['VSCE_TESTS'] || !process.stdout.isTTY) {
        return Promise.resolve('y');
    }
    return __read(__assign({ prompt: prompt }, options));
}
exports.read = read;
var marketplaceUrl = process.env['VSCE_MARKETPLACE_URL'] || 'https://marketplace.visualstudio.com';
function getPublishedUrl(extension) {
    return marketplaceUrl + "/items?itemName=" + extension;
}
exports.getPublishedUrl = getPublishedUrl;
function getGalleryAPI(pat) {
    var authHandler = WebApi_1.getBasicHandler('oauth', pat);
    var vsoapi = new WebApi_1.WebApi('oauth', authHandler);
    return vsoapi.getGalleryApi(marketplaceUrl);
}
exports.getGalleryAPI = getGalleryAPI;
function getSecurityRolesAPI(pat) {
    var authHandler = WebApi_1.getBasicHandler('oauth', pat);
    var vsoapi = new WebApi_1.WebApi('oauth', authHandler);
    return vsoapi.getSecurityRolesApi(marketplaceUrl);
}
exports.getSecurityRolesAPI = getSecurityRolesAPI;
function getPublicGalleryAPI() {
    return new publicgalleryapi_1.PublicGalleryAPI(marketplaceUrl, '3.0-preview.1');
}
exports.getPublicGalleryAPI = getPublicGalleryAPI;
function normalize(path) {
    return path.replace(/\\/g, '/');
}
exports.normalize = normalize;
function chain2(a, b, fn, index) {
    if (index === void 0) { index = 0; }
    if (index >= b.length) {
        return Promise.resolve(a);
    }
    return fn(a, b[index]).then(function (a) { return chain2(a, b, fn, index + 1); });
}
function chain(initial, processors, process) {
    return chain2(initial, processors, process);
}
exports.chain = chain;
function flatten(arr) {
    return [].concat.apply([], arr);
}
exports.flatten = flatten;
var CancelledError = 'Cancelled';
function isCancelledError(error) {
    return error === CancelledError;
}
exports.isCancelledError = isCancelledError;
var CancellationToken = /** @class */ (function () {
    function CancellationToken() {
        this.listeners = [];
        this._cancelled = false;
    }
    Object.defineProperty(CancellationToken.prototype, "isCancelled", {
        get: function () { return this._cancelled; },
        enumerable: true,
        configurable: true
    });
    CancellationToken.prototype.subscribe = function (fn) {
        var _this = this;
        this.listeners.push(fn);
        return function () {
            var index = _this.listeners.indexOf(fn);
            if (index > -1) {
                _this.listeners.splice(index, 1);
            }
        };
    };
    CancellationToken.prototype.cancel = function () {
        var emit = !this._cancelled;
        this._cancelled = true;
        if (emit) {
            this.listeners.forEach(function (l) { return l(CancelledError); });
            this.listeners = [];
        }
    };
    return CancellationToken;
}());
exports.CancellationToken = CancellationToken;
function sequence(promiseFactories) {
    return __awaiter(this, void 0, void 0, function () {
        var _i, promiseFactories_1, factory;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _i = 0, promiseFactories_1 = promiseFactories;
                    _a.label = 1;
                case 1:
                    if (!(_i < promiseFactories_1.length)) return [3 /*break*/, 4];
                    factory = promiseFactories_1[_i];
                    return [4 /*yield*/, factory()];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3:
                    _i++;
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/];
            }
        });
    });
}
exports.sequence = sequence;
var LogMessageType;
(function (LogMessageType) {
    LogMessageType[LogMessageType["DONE"] = 0] = "DONE";
    LogMessageType[LogMessageType["INFO"] = 1] = "INFO";
    LogMessageType[LogMessageType["WARNING"] = 2] = "WARNING";
    LogMessageType[LogMessageType["ERROR"] = 3] = "ERROR";
})(LogMessageType || (LogMessageType = {}));
var LogPrefix = (_a = {},
    _a[LogMessageType.DONE] = chalk_1.default.bgGreen.black(' DONE '),
    _a[LogMessageType.INFO] = chalk_1.default.bgBlueBright.black(' INFO '),
    _a[LogMessageType.WARNING] = chalk_1.default.bgYellow.black(' WARNING '),
    _a[LogMessageType.ERROR] = chalk_1.default.bgRed.black(' ERROR '),
    _a);
function _log(type, msg) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    args = [LogPrefix[type], msg].concat(args);
    if (type === LogMessageType.WARNING) {
        console.warn.apply(console, args);
    }
    else if (type === LogMessageType.ERROR) {
        console.error.apply(console, args);
    }
    else {
        console.log.apply(console, args);
    }
}
exports.log = {
    done: _log.bind(null, LogMessageType.DONE),
    info: _log.bind(null, LogMessageType.INFO),
    warn: _log.bind(null, LogMessageType.WARNING),
    error: _log.bind(null, LogMessageType.ERROR)
};

//# sourceMappingURL=util.js.map
