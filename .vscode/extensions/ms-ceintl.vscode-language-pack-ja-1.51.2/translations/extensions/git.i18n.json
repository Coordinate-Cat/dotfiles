{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "Git",
			"description": "Git SCM統合",
			"command.setLogLevel": "ログ レベルの設定...",
			"command.clone": "クローン",
			"command.cloneRecursive": "複製 (再帰)",
			"command.init": "リポジトリの初期化",
			"command.openRepository": "リポジトリを開く",
			"command.close": "リポジトリを閉じる",
			"command.refresh": "最新の情報に更新",
			"command.openChange": "変更を開く",
			"command.openFile": "ファイルを開く",
			"command.openHEADFile": "ファイル (HEAD) を開く",
			"command.stage": "変更をステージ",
			"command.stageAll": "すべての変更をステージ",
			"command.stageAllTracked": "すべての変更履歴をステージングする",
			"command.stageAllUntracked": "すべての追跡対象外の変更のステージング",
			"command.stageAllMerge": "すべてのマージ変更をステージする",
			"command.stageSelectedRanges": "選択した範囲をステージする",
			"command.revertSelectedRanges": "選択範囲を元に戻す",
			"command.stageChange": "変更のステージング",
			"command.revertChange": "変更を元に戻す",
			"command.unstage": "変更のステージング解除",
			"command.unstageAll": "すべての変更のステージング解除",
			"command.unstageSelectedRanges": "選択した範囲のステージを解除",
			"command.clean": "変更を破棄",
			"command.cleanAll": "すべての変更を破棄",
			"command.cleanAllTracked": "変更履歴をすべて破棄",
			"command.cleanAllUntracked": "追跡対象外のすべての変更を破棄",
			"command.commit": "コミット",
			"command.commitStaged": "ステージング済みをコミット",
			"command.commitEmpty": "空のコミット",
			"command.commitStagedSigned": "コミットしてステージング (サインオフ)",
			"command.commitStagedAmend": "ステージング済をコミット (修正)",
			"command.commitAll": "すべてコミット",
			"command.commitAllSigned": "すべてコミット (Signed Off)",
			"command.commitAllAmend": "すべてコミット (修正)",
			"command.commitNoVerify": "コミット (確認なし)",
			"command.commitStagedNoVerify": "ステージング済みをコミット (確認なし)",
			"command.commitEmptyNoVerify": "空のコミット (確認なし)",
			"command.commitStagedSignedNoVerify": "ステージング済みをコミット (サインオフ、確認なし)",
			"command.commitStagedAmendNoVerify": "ステージング済みをコミット (修正、確認なし)",
			"command.commitAllNoVerify": "すべてコミット (確認なし)",
			"command.commitAllSignedNoVerify": "すべてコミット (サインオフ、確認なし)",
			"command.commitAllAmendNoVerify": "すべてコミット (修正、確認なし)",
			"command.restoreCommitTemplate": "コミット テンプレートを復元する",
			"command.undoCommit": "前回のコミットを元に戻す",
			"command.checkout": "チェックアウト先...",
			"command.branch": "分岐の作成...",
			"command.branchFrom": "ブランチの作成元...",
			"command.deleteBranch": "ブランチの削除...",
			"command.renameBranch": "ブランチ名の変更...",
			"command.merge": "ブランチをマージ...",
			"command.rebase": "ブランチのリベース...",
			"command.createTag": "タグを作成",
			"command.deleteTag": "タグの削除",
			"command.fetch": "フェッチ",
			"command.fetchPrune": "フェッチ (Prune)",
			"command.fetchAll": "すべてのリモートからフェッチ",
			"command.pull": "プル",
			"command.pullRebase": "プル (リベース)",
			"command.pullFrom": "指定元からプル...",
			"command.push": "プッシュ",
			"command.pushForce": "プッシュ (強制)",
			"command.pushTo": "プッシュ先...",
			"command.pushToForce": "プッシュ先... (強制)",
			"command.pushFollowTags": "プッシュ (タグをフォロー)",
			"command.pushFollowTagsForce": "プッシュ (タグをフォロー、強制)",
			"command.addRemote": "リモートの追加...",
			"command.removeRemote": "リモートの削除",
			"command.sync": "同期",
			"command.syncRebase": "同期 (Rebase)",
			"command.publish": "ブランチを発行...",
			"command.showOutput": "Git 出力の表示",
			"command.ignore": ".gitignore に追加",
			"command.revealInExplorer": "サイド バーに表示",
			"command.rebaseAbort": "リベースを中止する",
			"command.stashIncludeUntracked": "一時退避 (未追跡ファイルを含む)",
			"command.stash": "一時退避",
			"command.stashPop": "一時退避内容を適用して削除...",
			"command.stashPopLatest": "最新の一時退避内容を適用して削除",
			"command.stashApply": "一時退避内容を適用...",
			"command.stashApplyLatest": "最新の一時退避内容を適用",
			"command.stashDrop": "一時退避を削除する...",
			"command.timelineOpenDiff": "変更を開く",
			"command.timelineCopyCommitId": "コミット ID のコピー",
			"command.timelineCopyCommitMessage": "コミット メッセージのコピー",
			"config.enabled": "Git が有効になっているかどうか。",
			"config.path": "Git 実行可能ファイルのパスとファイル名 (例: Windows の場合は `C:\\Program Files\\Git\\bin\\git.exe`)。検索する複数のパスを含む文字列値の配列を指定することもできます。",
			"config.autoRepositoryDetection": "レポジトリを自動的に検出するかどうかを構成します。",
			"config.autoRepositoryDetection.true": "現在開いているフォルダーのサブフォルダーと、開いているファイルの親フォルダーの両方をスキャンします。",
			"config.autoRepositoryDetection.false": "リポジトリの自動的なスキャンを無効にします。",
			"config.autoRepositoryDetection.subFolders": "現在開いているフォルダーのサブフォルダーをスキャンします。",
			"config.autoRepositoryDetection.openEditors": "開いているファイルの親フォルダーをスキャンします。",
			"config.autorefresh": "自動更新の有効/無効。",
			"config.autofetch": "有効にした場合、現在の Git リポジトリの既定のリモートから自動的にコミットがフェッチされます。",
			"config.autofetchPeriod": "`git.autofetch` が有効な場合の git の自動フェッチ間隔 (秒単位)。",
			"config.confirmSync": "Git リポジトリを同期する前に確認します。",
			"config.countBadge": "Git カウント バッジを制御します。",
			"config.countBadge.all": "すべての変更をカウントします。",
			"config.countBadge.tracked": "追跡済みの変更のみカウントします。",
			"config.countBadge.off": "カウンターをオフにします。",
			"config.checkoutType": "`チェックアウト先...` を実行するとき、どの種類のブランチを一覧表示するか制御します。",
			"config.checkoutType.all": "すべての参照を表示します。",
			"config.checkoutType.local": "ローカル ブランチのみを表示します。",
			"config.checkoutType.tags": "タグのみを表示します。",
			"config.checkoutType.remote": "リモート ブランチのみを表示します。",
			"config.branchValidationRegex": "新しいブランチ名を検証するための正規表現。",
			"config.branchWhitespaceChar": "新しいブランチ名で空白文字を置換する文字。",
			"config.ignoreLegacyWarning": "古い Git である警告を無視します。",
			"config.ignoreMissingGitWarning": "Git が見つからない場合の警告を無視します。",
			"config.ignoreWindowsGit27Warning": "Git 2.25 - 2.26 が Windows にインストールされている場合は警告を無視します。",
			"config.ignoreLimitWarning": "リポジトリ内に変更が多い場合の警告を無視します。",
			"config.defaultCloneDirectory": "Git リポジトリをクローンする既定の場所。",
			"config.enableSmartCommit": "ステージされた変更がない場合はすべての変更をコミットします。",
			"config.smartCommitChanges": "スマート コミットで変更を自動的にステージングするかどうかを制御します。",
			"config.smartCommitChanges.all": "すべての変更を自動的にステージします。",
			"config.smartCommitChanges.tracked": "自動的にステージングされた変更箇所のみ。",
			"config.suggestSmartCommit": "スマート コミットを有効にすることを推奨します (ステージング済み変更がない場合、すべての変更をコミットします)。",
			"config.enableCommitSigning": "GPG または X.509 によるコミットの署名を有効にします。",
			"config.discardAllScope": "'すべての変更を破棄' コマンドによってどの変更が破棄されるかを制御します。'all' はすべての変更を破棄します。 'tracked' は追跡されているファイルだけを破棄します。 'prompt' は、アクションが実行されるたびにプロンプ​​ト ダイアログを表示します。",
			"config.decorations.enabled": "Git が配色とバッジをエクスプローラーと開いているエディターのビューに提供するかどうかを制御します。",
			"config.enableStatusBarSync": "ステータス バーに Git Sync コマンドを表示するかどうかを制御します。",
			"config.promptToSaveFilesBeforeCommit": "コミット前に Git が保存していないファイルを確認すべきかどうかを制御します。",
			"config.promptToSaveFilesBeforeCommit.always": "保存されていないファイルがないか確認します。",
			"config.promptToSaveFilesBeforeCommit.staged": "保存されていないステージング済みファイルのみを確認します。",
			"config.promptToSaveFilesBeforeCommit.never": "このチェックを無効にします。",
			"config.postCommitCommand": "コミットの成功後、git コマンドを実行します。",
			"config.postCommitCommand.none": "コミット後、任意のコマンドを実行しません。",
			"config.postCommitCommand.push": "コミットの成功後、'Git Push' を実行します。",
			"config.postCommitCommand.sync": "コミットの成功後、'Git Sync' を実行します。",
			"config.showInlineOpenFileAction": "Git 変更の表示内にインラインのファイルを開くアクションを表示するかどうかを制御します。",
			"config.showPushSuccessNotification": "プッシュが成功したときに通知を表示するかどうかを制御します。",
			"config.inputValidation": "コミット メッセージの入力検証をいつ表示するかを制御します。",
			"config.inputValidationLength": "警告を表示するコミット メッセージの長さのしきい値を制御します。",
			"config.inputValidationSubjectLength": "警告を表示するためのコミット メッセージの件名長のしきい値を制御します。'config.inputValidationLength' の値を継承する場合には設定解除します。",
			"config.detectSubmodules": "git サブモジュールを自動的に検出するかどうかを制御します。",
			"config.detectSubmodulesLimit": "検出する git サブモジュール数の制限を制御します。",
			"config.alwaysShowStagedChangesResourceGroup": "ステージ済み変更のリソース グループを常に表示します。",
			"config.alwaysSignOff": "すべてのコミットのサインオフ フラグを制御します。",
			"config.ignoredRepositories": "無視する git リポジトリの一覧。",
			"config.scanRepositories": "Git リポジトリを検索するパスのリスト。",
			"config.showProgress": "Git 操作の進行状況を表示するかどうかを制御します。",
			"config.rebaseWhenSync": "同期コマンドを実行するときに、Git リベースを強制します。",
			"config.confirmEmptyCommits": "'Git: Commit Empty' コマンドの空のコミットの作成を常に確認します。",
			"config.fetchOnPull": "有効にすると、プル時にすべてのブランチをフェッチします。それ以外の場合は、現在のブランチだけをフェッチします。",
			"config.pullTags": "プルするときにすべてのタグをフェッチします。",
			"config.autoStash": "プルする前にすべての変更を一時退避し、プル成功後に復元します。",
			"config.allowForcePush": "強制的なプッシュ (--force-with-lease の有無にかかわらず) を有効にするかどうかを制御します。",
			"config.useForcePushWithLease": "force プッシュより安全な force-with-lease 方式を使用するかどうかを制御します。",
			"config.confirmForcePush": "強制的なプッシュの前に確認を求めるかどうかを制御します。",
			"config.allowNoVerifyCommit": "pre-commit と commit-msg フックを実行しないコミットを許可するかどうかを制御します。",
			"config.confirmNoVerifyCommit": "確認せずにコミットする前に確認メッセージを表示するかどうかを制御します。",
			"config.openDiffOnClick": "変更をクリックすると差分エディターを開くかどうかを制御します。そうでなければ通常のエディターを開きます。",
			"config.supportCancellation": "ユーザーが操作を中止できる同期アクションの実行時に通知が表示されるかどうかを制御します。",
			"config.branchSortOrder": "ブランチの並べ替え順序を制御します。",
			"config.untrackedChanges": "追跡対象外の変更の動作を制御します。",
			"config.untrackedChanges.mixed": "追跡対象および追跡対象外のすべての変更は、一緒に表示され、均等に動作します。",
			"config.untrackedChanges.separate": "追跡されていない変更は、ソース管理ビューに個別に表示されます。それらは、複数のアクションからも除外されます。",
			"config.untrackedChanges.hidden": "追跡対象外の変更は非表示になり、複数のアクションから除外されます。",
			"config.showCommitInput": "Git ソース管理パネルにコミットの入力を表示するかどうかを制御します。",
			"config.terminalAuthentication": "統合ターミナルで生成される Git プロセスの認証ハンドラーとして VS Code を有効にするかどうかを制御します。注意: この設定の変更を反映させるには、ターミナルを再起動する必要があります。",
			"config.timeline.showAuthor": "タイムライン ビューにコミット作成者を表示するかどうかを制御します",
			"config.timeline.date": "タイムライン ビューでアイテムに使用する日付を制御します",
			"config.timeline.date.committed": "コミットされた日付を使用する",
			"config.timeline.date.authored": "作成日を使用する",
			"submenu.commit": "コミット",
			"submenu.commit.amend": "修正",
			"submenu.commit.signoff": "サインオフ",
			"submenu.changes": "変更",
			"submenu.pullpush": "プル、プッシュ",
			"submenu.branch": "ブランチ",
			"submenu.remotes": "リモート",
			"submenu.stash": "一時退避",
			"submenu.tags": "タグ",
			"colors.added": "追加したリソースの配色。",
			"colors.modified": "リソースを改変した場合の配色",
			"colors.stageModified": "ステージングされた変更済みリソースの色。",
			"colors.stageDeleted": "ステージングされた削除済みリソースの色。",
			"colors.deleted": "リソースを検出した場合の配色",
			"colors.untracked": "リソースを追跡しない場合の配色",
			"colors.ignored": "リソースを無視する場合の配色",
			"colors.conflict": "リソースが競合する場合の配色",
			"colors.submodule": "サブモジュールの配色。",
			"view.workbench.scm.missing": "有効な Git インストールが検出されませんでした。詳細については、[Git 出力](command:git.showOutput) をご確認ください。\r\n[Git をインストール](https://git-scm.com/) するか、VS Code で Git とソース管理を使用する方法の詳細について [ドキュメント](https://aka.ms/vscode-scm) をご覧ください。\r\n別のバージョン コントロール システムを使用している場合は、追加の拡張機能を [マーケットプレースで検索](command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22) できます。",
			"view.workbench.scm.disabled": "Git 機能を使用する場合は、[設定](command:workbench.action.openSettings?%5B%22git.enabled%22%5D) で Git を有効にしてください。\r\nVS Code で Git とソース管理を使用する方法の詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-scm)。",
			"view.workbench.scm.empty": "Git 機能を使用するために、Git リポジトリを含むフォルダーを開くか、URL からクローンを作成することができます。\r\n[フォルダーを開く](command:vscode.openFolder)\r\n[リポジトリのクローン](command:git.clone)\r\nVS Code で Git とソース管理を使用する方法の詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-scm)。",
			"view.workbench.scm.folder": "現在開いているフォルダーには Git リポジトリがありません。Git を利用したソース管理機能を有効にするリポジトリを初期化できます。\r\n[リポジトリを初期化する](command:git.init?%5Btrue%5D)\r\nVS Code で Git とソース管理を使用する方法の詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-scm)。",
			"view.workbench.scm.workspace": "現在開いているワークスペースには、Git リポジトリを含むフォルダーはありません。フォルダーにあるリポジトリを初期化して、Git を利用したソース管理機能を有効にすることができます。\r\n[リポジトリの初期化](command:git.init)\r\nVS Code で Git とソース管理を使用する方法の詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-scm)。",
			"view.workbench.scm.emptyWorkspace": "現在開いているワークスペースには、Git リポジトリを含むフォルダーがありません。\r\n[ワークスペースにフォルダーを追加する](command:workbench.action.addRootFolder)\r\nVS Code で Git とソース管理を使用する方法の詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-scm)。",
			"view.workbench.cloneRepository": "URL からリポジトリをクローンすることもできます。VS Code で Git とソース管理を使用する方法の詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-scm)。\r\n[リポジトリをクローンする](command:git.clone)"
		},
		"dist/repository": {
			"index modified": "変更されたインデックス",
			"modified": "変更済み",
			"index added": "インデックスの追加",
			"index deleted": "削除されたインデックス",
			"deleted": "削除済み",
			"index renamed": "インデックスの名前変更",
			"index copied": "インデックスをコピー",
			"untracked": "追跡対象外",
			"ignored": "無視",
			"intent to add": "追加する目的",
			"both deleted": "双方とも削除",
			"added by us": "こちら側による追加",
			"deleted by them": "他者が削除",
			"added by them": "あちら側による追加",
			"deleted by us": "こちらが削除",
			"both added": "双方とも追加",
			"both modified": "双方とも変更",
			"open": "開く",
			"commit": "コミット",
			"merge changes": "変更のマージ",
			"staged changes": "ステージされている変更",
			"changes": "変更",
			"untracked changes": "追跡対象外の変更",
			"push success": "正常にプッシュされました。",
			"commit in rebase": "リベースの最中にコミット メッセージは変更できません。リベースの操作を終了してから、代わりに interactive rebase を使用してください。",
			"commitMessageWhitespacesOnlyWarning": "現在のコミット メッセージには空白文字のみが含めています",
			"commitMessageCountdown": "現在の行で残り {0} 文字",
			"commitMessageWarning": "現在の行で {1} から {0} 文字オーバー",
			"sync is unpredictable": "同期中です。キャンセルすると、リポジトリに重大な損傷を与える可能性があります",
			"huge": "'{0}' のGit リポジトリにアクティブな変更が多いため、 Git 機能の一部のみが有効になります。",
			"neveragain": "今後表示しない",
			"add known": ".gitignore に '{0}' を追加しますか。",
			"yes": "はい",
			"sync changes": "変更の同期",
			"pull n": "{1}/{2} から {0} 件のコミットをプルします",
			"push n": "{1}/{2} に {0} 件のコミットをプッシュします",
			"pull push n": "{2}/{3} の間で {0} 件のコミットをプルし、{1} 件のコミットをプッシュします",
			"commitMessageWithHeadLabel": "メッセージ ('{1}' でコミットするための {0})",
			"commitMessage": "メッセージ (コミットするための {0})"
		},
		"dist/main": {
			"looking": "次の場所で Git を検索しています: {0}",
			"using git": "{1} から Git {0} を使用しています",
			"downloadgit": "Git のダウンロード",
			"neverShowAgain": "今後表示しない",
			"notfound": "Git が見つかりません。Git をインストールするか 'git.path' 設定でパスを構成してください。",
			"updateGit": "Git の更新",
			"git20": "Git {0} がインストールされているようです。Code は Git 2 以上で最適に動作します",
			"git2526": "インストールされている Git {0} には既知の問題があります。Git 機能を正常に動作させるために、Git を 2.27 以上に更新してください。"
		},
		"dist/remoteSource": {
			"type to search": "リポジトリ名 (検索するテキストを入力)",
			"type to filter": "リポジトリ名",
			"none found": "リモート リポジトリが見つかりません。",
			"error": "$(error) エラー: {0}",
			"provide url": "リポジトリ URL を指定する",
			"provide url or pick": "リポジトリ URL を指定するか、リポジトリ ソースを選択します。",
			"url": "URL",
			"pick url": "複製元の URL を選択します。"
		},
		"dist/timelineProvider": {
			"git.timeline.source": "Git 履歴",
			"git.timeline.you": "自分",
			"git.timeline.stagedChanges": "ステージング済みの変更",
			"git.timeline.detail": "{0}  — {1}\r\n{2}\r\n\r\n{3}",
			"git.index": "インデックス",
			"git.timeline.uncommitedChanges": "コミットされていない変更",
			"git.workingTree": "作業ツリー"
		},
		"dist/model": {
			"not supported": "'git.scanRepositories' 設定は絶対パスをサポートしていません。",
			"too many submodules": "'{0}' リポジトリに {1} 個のサブモジュールがあり、自動では開かれません。 ファイルを開くことで、それぞれを個別に開くことができます。",
			"no repositories": "利用可能なリポジトリがありません",
			"pick repo": "リポジトリの選択"
		},
		"dist/autofetch": {
			"yes": "はい",
			"no": "いいえ",
			"not now": "後で通知する",
			"suggest auto fetch": "Code が [定期的に 'git fetch']({0}) を実行してもよろしいですか?"
		},
		"dist/statusbar": {
			"rebasing": "リベースしています",
			"checkout": "ブランチまたはタグのチェックアウト...",
			"publish to": "{0} に発行する",
			"publish to...": "以下に発行する...",
			"publish changes": "変更の発行",
			"syncing changes": "変更を同期しています..."
		},
		"dist/commands": {
			"tag at": "{0} のタグ",
			"remote branch at": "{0} でのリモート ブランチ",
			"create branch": "新しい分岐の作成...",
			"create branch from": "新しい分岐の作成元...",
			"add remote": "新しいリモートを追加...",
			"current": "現在のマシン",
			"select log level": "ログ レベルを選択",
			"changed": "変更後のログ レベル: {0}",
			"git.title.index": "{0} (インデックス)",
			"git.title.workingTree": "{0} (作業ツリー)",
			"git.title.theirs": "{0} (他のユーザー)",
			"git.title.ours": "{0} (自分たちの)",
			"git.title.untracked": "{0} (未追跡)",
			"clonefrom": "{0} から複製",
			"repourl": "リポジトリの URL",
			"selectFolder": "リポジトリの場所を選択",
			"cloning": "Git リポジトリ '{0}' をクローンしています...",
			"proposeopen": "クローンしたリポジトリを開きますか?",
			"openrepo": "開く",
			"openreponew": "新しいウィンドウで開く",
			"add": "ワークスペースに追加",
			"proposeopen2": "複製したリポジトリを開きますか? または現在のワークスペースに追加しますか?",
			"init": "Git リポジトリを初期化するワークスペース フォルダーを選択してください",
			"choose": "フォルダーを選択...",
			"init repo": "リポジトリの初期化",
			"create repo": "リポジトリの初期化",
			"are you sure": "'{0}' に Git リポジトリを作成します。続行してもよろしいですか?",
			"proposeopen init": "初期化済みのリポジトリを開きますか?",
			"proposeopen2 init": "初期化済みのリポジトリを開きますか? または現在のワークスペースへ追加しますか?",
			"open repo": "リポジトリを開く",
			"HEAD not available": "'{0}' の HEAD バージョンは利用できません。",
			"confirm stage files with merge conflicts": "マージの競合がある {0} 個のファイルをステージしてもよろしいですか?",
			"confirm stage file with merge conflicts": "マージの競合がある {0} をステージしてもよろしいですか? ",
			"yes": "はい",
			"keep ours": "自分 (Our) を維持する",
			"delete": "ファイルを削除",
			"deleted by them": "ファイル '{0}' は、他者が削除し、こちらが変更しました。\r\n\r\nどのように処理しますか?",
			"keep theirs": "相手 (Their) を維持する",
			"deleted by us": "ファイル '{0}' は、こちらが削除し、他者が変更しました。\r\n\r\nどのように処理しますか?",
			"discard": "変更を破棄",
			"confirm delete": "{0} を削除しますか?\r\nこれは元に戻すことはできません。\r\n続行すると、このファイルは完全に失われます。",
			"delete file": "ファイルを削除",
			"restore file": "ファイルを復元",
			"confirm restore": "{0} を復元しますか?",
			"confirm discard": "{0} の変更を破棄しますか?",
			"restore files": "複数のファイルを復元",
			"confirm restore multiple": "{0} 個のファイルを復元しますか?",
			"confirm discard multiple": "{0} 個のファイルの変更内容を破棄しますか?",
			"warn untracked": "{0} 個の追跡されていないファイルが削除されます。\r\nこれは元に戻すことはできません。\r\nこれらのファイルは完全に失われます。",
			"there are untracked files single": "破棄すると次の未追跡ファイルがディスクから削除されます: {0}。",
			"there are untracked files": "破棄すると {0} 個の未追跡ファイルがディスクから削除されます。",
			"confirm discard all 2": "{0}\r\n\r\nこれは元に戻すことはできません。現在のワーキング セットは永久に失われます。",
			"yes discard tracked": "1 つの追跡ファイルを破棄",
			"yes discard tracked multiple": "{0} 個の追跡ファイルを破棄",
			"discardAll": "{0} 個のファイルをすべて破棄",
			"confirm discard all single": "{0} の変更を破棄しますか?",
			"confirm discard all": "{0} 個のファイルのすべての変更を破棄してもよろしいですか?\r\nこれは元に戻すことができません。\r\n続行すると、現在のワーキング セットは完全に失われます。",
			"discardAll multiple": "1 つのファイルを破棄",
			"confirm delete multiple": "{0} 個のファイルを削除しますか?\r\nこれは元に戻すことができません。\r\n続行すると、このファイルは完全に失われます。",
			"delete files": "複数のファイルを削除",
			"unsaved files single": "次のファイルには保存されていない変更があり、続行するとコミットに組み込まれません: {0}。\r\n\r\nコミットする前に保存しますか?",
			"unsaved files": "{0} 個の保存されていないファイルがあります。\r\n\r\nコミットする前に保存しますか?",
			"save and commit": "すべてのコミットを保存",
			"commit": "このままコミット",
			"no staged changes": "ステージされている変更がなく、コミットできません。\r\n\r\nすべての変更をステージして、直接コミットしますか?",
			"always": "常に行う",
			"never": "行わない",
			"no changes": "コミットする必要のある変更はありません。",
			"no verify commit not allowed": "確認なしのコミットは許可されていません。'git.allowNoVerifyCommit' 設定を使用して有効にしてください。",
			"confirm no verify commit": "確認せずに変更をコミットしようとしています。これは、コミット前のフックをスキップするため、望ましくない場合があります。\r\n\r\n続行しますか?",
			"ok": "OK",
			"never ask again": "今後は確認しない",
			"commitMessageWithHeadLabel2": "メッセージ ('{0}' でコミット)",
			"commit message": "コミット メッセージ",
			"provide commit message": "コミット メッセージを入力してください",
			"confirm emtpy commit": "空のコミットを生成しますか?",
			"yes never again": "はい、今後は表示しません",
			"no more": "HEAD が任意のコミットを明示しないため、元に戻すことはできません。",
			"undo commit": "マージ コミットの取り消し",
			"merge commit": "最後のコミットはマージ コミットでした。元に戻しますか?",
			"select a ref to checkout": "チェックアウトする参照を選択",
			"branch name": "ブランチ名",
			"provide branch name": "新しいブランチ名を入力してください",
			"branch name format invalid": "ブランチ名は次の正規表現に一致する必要があります: {0}",
			"select a ref to create a new branch from": "'{0}' ブランチの作成元 ref を選択",
			"select branch to delete": "削除するブランチの選択",
			"confirm force delete branch": "ブランチ '{0}' はマージされていません。それでも削除しますか？",
			"delete branch": "ブランチの削除",
			"invalid branch name": "無効なブランチ名",
			"branch already exists": "ブランチ名 '{0}' は既に存在します",
			"select a branch to merge from": "マージ元のブランチを選択",
			"select a branch to rebase onto": "リベース先のブランチを選択",
			"tag name": "タグ名",
			"provide tag name": "タグ名を入力してください",
			"tag message": "メッセージ",
			"provide tag message": "注釈付きタグにつけるメッセージを入力してください",
			"no tags": "このリポジトリにはタグがありません。",
			"select a tag to delete": "削除するタグを選択する",
			"no remotes to fetch": "リポジトリには、フェッチ元として構成されているリモートがありません。",
			"no remotes to pull": "リポジトリには、プル元として構成されているリモートがありません。",
			"pick remote pull repo": "リモートを選んで、ブランチを次からプルします:",
			"pick branch pull": "プル元のブランチを選択",
			"addremote": "リモートを追加する",
			"no remotes to push": "リポジトリには、プッシュ先として構成されているリモートがありません。",
			"force push not allowed": "強制的なプッシュは禁止されています。'git.allowForcePush' 設定で有効にしてください。",
			"confirm force push": "変更の強制プッシュを行おうとしていますが、これは破壊的なことがあり、他人の変更を誤って上書きする可能性があります。\r\n\r\n続行しますか?",
			"nobranch": "リモートにプッシュするブランチをチェックアウトしてください。",
			"confirm publish branch": "'{0}' ブランチに上流ブランチはありません。このブランチを公開しますか?",
			"pick remote": "リモートを選んで、ブランチ '{0}' を次の場所に公開します:",
			"addfrom": "{0} からリモートを追加する",
			"addFrom": "URL からリモートを追加する",
			"remote name": "リモート名",
			"provide remote name": "リモート名を入力してください。",
			"remote name format invalid": "リモート名の形式が無効です",
			"remote already exists": "リモート '{0}' は既に存在します。",
			"no remotes added": "リポジトリにリモートが含まれていません。",
			"remove remote": "削除するリモートを選択",
			"sync is unpredictable": "このアクションでは、'{0}/{1}' との間でコミットをプッシュおよびプルします。",
			"never again": "OK、今後は表示しない",
			"no remotes to publish": "リポジトリには、発行先として構成されているリモートがありません。",
			"publish to": "{0} に発行する",
			"pick provider": "ブランチ '{0}' を以下へ発行するプロバイダーを選択する:",
			"no changes stash": "一時退避する変更がありません。",
			"provide stash message": "必要に応じて一時退避メッセージを入力してください",
			"stash message": "一時退避メッセージ",
			"pick stash to pop": "適用して削除する一時退避内容を選択してください",
			"no stashes": "リポジトリ内に一時退避内容はありません。",
			"pick stash to apply": "適用する一時退避内容を選択してください",
			"pick stash to drop": "ドロップする一時退避を削除する",
			"git.title.diffRefs": "{0} ({1}) ⟷ {0} ({2})",
			"no rebase": "進行中のリベースはありません。",
			"open git log": "Git ログを開く",
			"clean repo": "チェックアウトの前に、リポジトリの作業ツリーを消去してください。",
			"cant push": "参照仕様をリモートにプッシュできません。最初に 'Pull' を実行して変更を統合してください。",
			"merge conflicts": "マージの競合があります。コミットする前にこれを解決してください。",
			"stash merge conflicts": "一時退避内容を適用している間に、マージの競合がありました。",
			"auth failed specific": "Git リモートに対して認証できませんでした:\r\n\r\n{0}",
			"auth failed": "Git リモートに対して認証できませんでした。",
			"missing user info": "Git の 'user.name' と 'user.email' を構成していることを確認してください。",
			"learn more": "詳細を表示",
			"git error details": "Git: {0}",
			"git error": "Git エラー"
		},
		"dist/askpass-main": {
			"missOrInvalid": "資格情報が見つからないか、無効です。"
		}
	}
}